{"version":3,"sources":["components/HomePage/query.tsx","components/HomePage/HomePage.jsx","App.js","index.tsx"],"names":["GET_LINKS","gql","HomePage","props","useQuery","data","loading","error","ready","links","map","link","Card","key","id","Image","src","wrapped","ui","Content","Header","Meta","className","createdAt","Description","description","extra","Icon","name","url","Segment","Dimmer","active","Loader","App","cache","InMemoryCache","HttpLink","uri","client","ApolloClient","ReactDOM","render","document","getElementById"],"mappings":"0cAEO,IAAMA,E,MAAYC,GAAH,KCGTC,EAAW,SAACC,GAAW,IAAD,EACAC,YAASJ,GAAlCK,EADyB,EACzBA,KAAMC,EADmB,EACnBA,QAASC,EADU,EACVA,MAEjBC,GAASF,IAAYC,EAE3B,OACE,oCACIC,EAUEH,EAAKI,MAAMC,KAAI,SAAAC,GAAI,OACnB,kBAACC,EAAA,EAAD,CAAMC,IAAKF,EAAKG,IACd,kBAACC,EAAA,EAAD,CAAOC,IAAI,gEAAgEC,SAAO,EAACC,IAAI,IACvF,kBAACN,EAAA,EAAKO,QAAN,KACE,kBAACP,EAAA,EAAKQ,OAAN,aACA,kBAACR,EAAA,EAAKS,KAAN,KACE,0BAAMC,UAAU,QAAQX,EAAKY,YAE/B,kBAACX,EAAA,EAAKY,YAAN,KACGb,EAAKc,cAGV,kBAACb,EAAA,EAAKO,QAAN,CAAcO,OAAK,GACjB,2BACE,kBAACC,EAAA,EAAD,CAAMC,KAAK,SACVjB,EAAKkB,UAvBZ,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQC,QAAM,GACZ,kBAACC,EAAA,EAAD,OAGF,kBAAClB,EAAA,EAAD,CAAOC,IAAI,0ECRNkB,MARf,WACE,OACE,yBAAKZ,UAAU,OACb,kBAAC,EAAD,Q,iBCGAa,G,OAAQ,IAAIC,KACZzB,EAAO,IAAI0B,IAAS,CACxBC,IAAK,qEAGDC,EAA8C,IAAIC,IAAa,CACnEL,QACAxB,SAGF8B,IAASC,OACP,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.e8390d38.chunk.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const GET_LINKS = gql`\n  query GetLinks {\n    links {\n      id\n      url\n      postedBy {\n        name\n      }\n    }\n  }\n`;","import React from 'react';\nimport { Dimmer, Loader, Image, Segment, Placeholder, Card, Icon } from 'semantic-ui-react'\nimport { useQuery } from '@apollo/react-hooks';\nimport { GET_LINKS } from './query';\n\nexport const HomePage = (props) => {\n  const { data, loading, error } = useQuery(GET_LINKS);\n\n  const ready = !loading && !error;\n  \n  return (\n    <>\n      {!ready\n        ? (\n          <Segment>\n          <Dimmer active>\n            <Loader />\n          </Dimmer>\n      \n          <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\n        </Segment>\n        )\n        : data.links.map(link => (\n          <Card key={link.id}>\n            <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} />\n            <Card.Content>\n              <Card.Header>Link</Card.Header>\n              <Card.Meta>\n                <span className='date'>{link.createdAt}</span>\n              </Card.Meta>\n              <Card.Description>\n                {link.description}\n              </Card.Description>\n            </Card.Content>\n            <Card.Content extra>\n              <a>\n                <Icon name='user' />\n                {link.url}\n              </a>\n            </Card.Content>\n          </Card>\n        ))\n      }\n    </>\n  )\n};","import React from 'react';\nimport { HomePage } from './components/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage />\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient } from 'apollo-client';\nimport { InMemoryCache, NormalizedCacheObject } from 'apollo-cache-inmemory';\nimport { HttpLink } from 'apollo-link-http';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\n\nconst cache = new InMemoryCache();\nconst link = new HttpLink({\n  uri: 'https://eu1.prisma.sh/kryvytskyy-volodymyr-2828cc/hackernews/dev'\n});\n\nconst client: ApolloClient<NormalizedCacheObject> = new ApolloClient({\n  cache,\n  link\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root'));"],"sourceRoot":""}